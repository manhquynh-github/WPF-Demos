<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ObjectDetectionVisualizer.Styles">
  <SolidColorBrush x:Key="Custom.OptionMark.Static.Background"
                   Color="Transparent" />
  <SolidColorBrush x:Key="Custom.OptionMark.Static.Border"
                   Color="#FFABADB3" />
  <SolidColorBrush x:Key="Custom.OptionMark.MouseOver.Background"
                   Color="#FFF3F9FF" />
  <SolidColorBrush x:Key="Custom.OptionMark.MouseOver.Border"
                   Color="#FF7EB4EA" />
  <SolidColorBrush x:Key="Custom.OptionMark.Pressed.Border"
                   Color="#FF569DE5" />
  <SolidColorBrush x:Key="Custom.OptionMark.Disabled.Border"
                   Color="#8EABADB3" />
  <SolidColorBrush x:Key="Custom.OptionMark.Disabled.Glyph"
                   Color="#8E212121" />
  <SolidColorBrush x:Key="Custom.OptionMark.Static.Glyph"
                   Color="#FF212121" />
  <Style TargetType="{x:Type CheckBox}">
    <Setter Property="Background"
            Value="{StaticResource Custom.OptionMark.Static.Background}" />
    <Setter Property="BorderBrush"
            Value="{StaticResource Custom.OptionMark.Static.Border}" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="FocusVisualStyle"
            Value="{StaticResource CustomFocusVisual}" />
    <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid x:Name="templateRoot"
                Background="Transparent"
                SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="checkBoxBorder"
                    Margin="1"
                    Padding="2"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2">
              <Grid x:Name="markGrid">
                <Path x:Name="optionMark"
                      Margin="1"
                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                      Fill="{StaticResource Custom.OptionMark.Static.Glyph}"
                      Opacity="0"
                      Stretch="None" />
                <Rectangle x:Name="indeterminateMark"
                           Margin="2"
                           Fill="{StaticResource Custom.OptionMark.Static.Glyph}"
                           Opacity="0" />
              </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter"
                              Grid.Column="1"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Focusable="False"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasContent"
                     Value="true">
              <Setter Property="Padding"
                      Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter TargetName="checkBoxBorder"
                      Property="Background"
                      Value="{StaticResource Custom.OptionMark.MouseOver.Background}" />
              <Setter TargetName="checkBoxBorder"
                      Property="BorderBrush"
                      Value="{StaticResource Custom.OptionMark.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter TargetName="checkBoxBorder"
                      Property="BorderBrush"
                      Value="{StaticResource Custom.OptionMark.Disabled.Border}" />
              <Setter TargetName="contentPresenter"
                      Property="Opacity"
                      Value="0.56" />
              <Setter TargetName="indeterminateMark"
                      Property="Fill"
                      Value="{StaticResource Custom.OptionMark.Disabled.Glyph}" />
              <Setter TargetName="optionMark"
                      Property="Fill"
                      Value="{StaticResource Custom.OptionMark.Disabled.Glyph}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
              <Setter TargetName="checkBoxBorder"
                      Property="BorderBrush"
                      Value="{StaticResource Custom.OptionMark.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
              <Setter TargetName="indeterminateMark"
                      Property="Opacity"
                      Value="0" />
              <Setter TargetName="optionMark"
                      Property="Opacity"
                      Value="1" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="{x:Null}">
              <Setter TargetName="indeterminateMark"
                      Property="Opacity"
                      Value="1" />
              <Setter TargetName="optionMark"
                      Property="Opacity"
                      Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ConfigCheckBoxStyle"
         BasedOn="{StaticResource {x:Type CheckBox}}"
         TargetType="CheckBox">
    <Setter Property="FontFamily"
            Value="Segoe UI" />
    <Setter Property="FontSize"
            Value="{StaticResource Custom.FontSize}" />
    <Setter Property="FontWeight"
            Value="Light" />
    <Setter Property="Margin"
            Value="0,4,0,0" />
    <Setter Property="VerticalContentAlignment"
            Value="Center" />
  </Style>
</ResourceDictionary>